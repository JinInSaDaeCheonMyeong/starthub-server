server:
  forward-headers-strategy: native
  servlet:
    session:
      cookie:
        same-site: None
        secure: true
        path: /

spring:
  application:
    name: starthub-server

  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update #TODO Change to validate and add migration tool
    show-sql: false
    open-in-view: false

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}

  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      chat:
        options:
          model: gpt-4.1-mini
          temperature: 0.7

  mail:
    host: ${EMAIL_HOST:smtp.gmail.com}
    port: ${EMAIL_PORT:587}
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - profile
              - email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
            client-name: Naver
          apple:
            client-id: ${APPLE_CLIENT_ID}
            client-name: Apple
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: name,email
            client-authentication-method: post
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          apple:
            authorization-uri: https://appleid.apple.com/auth/authorize
            token-uri: https://appleid.apple.com/auth/token

app:
  jwt:
    secret: ${JWT_SECRET}
    access: 86400000
    refresh: 604800000

oauth:
  google:
    android-client-id: ${GOOGLE_ANDROID_CLIENT_ID}
    android-redirect-uri: ${GOOGLE_ANDROID_REDIRECT_URI}
    ios-client-id: ${GOOGLE_IOS_CLIENT_ID}
    ios-redirect-uri: ${GOOGLE_IOS_REDIRECT_URI}
    token-uri: https://oauth2.googleapis.com/token
    user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
    grant-type: authorization_code

  naver:
    client-id: ${NAVER_CLIENT_ID}
    client-secret: ${NAVER_CLIENT_SECRET}
    token-uri: https://nid.naver.com/oauth2.0/token
    user-info-uri: https://openapi.naver.com/v1/nid/me
    grant-type: authorization_code

  apple:
    team-id: ${APPLE_TEAM_ID}
    client-id: ${APPLE_CLIENT_ID}
    key-id: ${APPLE_KEY_ID}
    private-key: ${APPLE_PRIVATE_KEY}

discord:
  webhook:
    url: ${DISCORD_WEBHOOK_URL}

recommendation:
  fastapi-url: ${RECOMMENDATION_API_URL}

perplexity:
  api-key: ${PERPLEXITY_API_KEY}
  base-url: https://api.perplexity.ai
  model: sonar-pro
  timeout: 30000
  max-tokens: 4000

gcs:
  bucket-name: ${GCS_BUCKET_NAME}
  project-id: ${GCS_PROJECT_ID}
  credentials-path: ${GCS_CREDENTIALS_PATH:}

swagger:
  auth:
    enabled: true
    username: ${SWAGGER_USERNAME}
    password: ${SWAGGER_PASSWORD}
